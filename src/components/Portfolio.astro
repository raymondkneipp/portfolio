---
import {
	IoEye,
	IoGitBranch,
	IoLink,
	IoLogoGithub,
} from 'react-icons/io5/index.js';
import Container from './Container.astro';

const token = import.meta.env.GITHUB_TOKEN;
const url = 'https://api.github.com/graphql';
const body = JSON.stringify({
	query: `{
					  user(login: "raymondkneipp") {
    					pinnedItems(first: 6, types: [REPOSITORY, GIST]) {
      					edges {
        					node {
          					... on Repository {
            					name
            					createdAt
            					repositoryTopics(first: 20) {
              					nodes {
                					topic {
                  					name
                					}
              					}
            					}
            					description
            					homepageUrl
            					url
            					openGraphImageUrl
          					}
        					}
      					}
    					}
  					}
					}`,
});

const headers = {
	Authorization: `bearer ${token}`,
	'Content-Type': 'application/json',
};
const res = await fetch(url, {
	body,
	headers,
	method: 'POST',
});
const data = await res.json();
const projects = data.data.user.pinnedItems.edges;
---

<Container>
	<section class='py-24 space-y-6'>
		<h2 class='text-4xl font-bold text-zinc-100'>Portfolio</h2>

		<div class='grid lg:grid-cols-2 gap-12'>
			{projects.map((project) => {
				const {
					name,
					createdAt,
					repositoryTopics,
					description,
					homepageUrl,
					url,
					openGraphImageUrl,
				} = project.node

				const topics = repositoryTopics.nodes

				return (
					<div class="space-y-3">
						<img
							src={openGraphImageUrl}
							alt={`screenshot of ${name}`}
							class="rounded-2xl"
						/>
						<h3 class="text-2xl font-bold text-zinc-100 capitalize">{name}</h3>

						<p class="text-zinc-400">{description}</p>

						<div class="flex items-center flex-wrap space-x-3">
							<a
								href={homepageUrl}
								class="flex items-center text-zinc-400 hover:text-zinc-100 transition hover:bg-zinc-800 px-3 py-1.5 rounded-lg focus:outline-none focus-visible:ring focus-visible:ring-cyan-500"
							>
								<IoEye size={24} />
								<span class="ml-3">Preview</span>
							</a>
							<a
								href={url}
								class="flex items-center text-zinc-400 hover:text-zinc-100 transition hover:bg-zinc-800 px-3 py-1.5 rounded-lg focus:outline-none focus-visible:ring focus-visible:ring-cyan-500"
							>
								<IoGitBranch size={24} />
								<span class="ml-3">Source</span>
							</a>
						</div>

						<div class="flex items-center flex-wrap gap-3">
							{topics.map((topic) => (
								<span class="text-sm bg-zinc-800 text-zinc-400 rounded-full py-1 px-2">
									{topic.topic.name}
								</span>
							))}
						</div>
					</div>
				)
			})}
		</div>
	</section>
</Container>
